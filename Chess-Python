#print("Do you want to play a game of chess?")
#Write moves for promotion pieces
#Use while in order to use break instead of return in move()
def play():
    piece=input("Enter the piece you want to move:")
    if piece=="":
        print("End")
    else:
        move(piece)

def find(p):
    #To find the indices of the piece based on its position
    for i in range(8):
        for j in range(8):
            if c[i][j][0]==p:
                return (i,j)
    
def label(m,n):
    i={0:8,1:7,2:6,3:5,4:4,5:3,6:2,7:1}
    j={0:"a",1:"b",2:"c",3:"d",4:"e",5:"f",6:"g",7:"h"}
    return j[n]+str(i[m])
def index(label):
    k={"a":0,"b":1,"c":2,"d":3,"e":4,"f":5,"g":6,"h":7}
    l={8:0,7:1,6:2,5:3,4:4,3:5,2:6,1:7}
    return (l[int(label[1])],k[label[0]])
def black_check():
    q="wq"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="w":
                    break
                elif c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                elif c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                elif c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="w":
                    break
                elif c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="w":
                    break
                elif c[i][k][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                elif c[i][k][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break            
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                elif c[i][k][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="w":
                    break
                elif c[i][k][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="w":
                        break
                    elif c[i-k][j+k][0]=="bki":
                        return True
                    elif c[i-k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="w":
                        break
                    elif c[i-k][j-k][0]=="bki":
                        return True
                    elif c[i-k][j-k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="w":
                        break
                    elif c[i+k][j+k][0]=="bki":
                        return True
                    elif c[i+k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="w":
                        break
                    elif c[i+k][j-k][0]=="bki":
                        return True
                    elif c[i+k][j-k][0][0]=="b":
                        break
    q="wr1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
                
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
    q="wr2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[k][j][0][0]=="b":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
                
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="w":
                    break
                if c[k][j][0]=="bki":
                    return True
                elif c[i][k][0][0]=="b":
                    break
    q="wp1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp3"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp4"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp5"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp6"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp7"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wp8"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="bki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="bki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="bki":
                return True
            elif c[i-1][j+1][0]=="bki":
                return True
    q="wk1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if i-2>=0:
            if j-1>=0:
                if c[i-2][j-1][0]=="bki":
                    return True
            if j+1<=7:
                if c[i-2][j+1][0]=="bki":
                    return True
        if i+2<=7:
            if j-1>=0:
                if c[i+2][j-1][0]=="bki":
                    return True
            if j+1<=7:
                if c[i+2][j+1][0]=="bki":
                    return True
        if i-1>=0:
            if j-2>=0:
                if c[i-1][j-2][0]=="bki":
                    return True
            if j+2<=7:
                if c[i-1][j+2][0]=="bki":
                    return True
        if i+1<=7:
            if j-2>=0:
                if c[i+1][j-2][0]=="bki":
                    return True
            if j+2<=7:
                if c[i+1][j+2][0]=="bki":
                    return True
    q="wk2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if i-2>=0:
            if j-1>=0:
                if c[i-2][j-1][0]=="bki":
                    return True
            if j+1<=7:
                if c[i-2][j+1][0]=="bki":
                    return True
        if i+2<=7:
            if j-1>=0:
                if c[i+2][j-1][0]=="bki":
                    return True
            if j+1<=7:
                if c[i+2][j+1][0]=="bki":
                    return True
        if i-1>=0:
            if j-2>=0:
                if c[i-1][j-2][0]=="bki":
                    return True
            if j+2<=7:
                if c[i-1][j+2][0]=="bki":
                    return True
        if i+1<=7:
            if j-2>=0:
                if c[i+1][j-2][0]=="bki":
                    return True
            if j+2<=7:
                if c[i+1][j+2][0]=="bki":
                    return True
    q="wb1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="w":
                        break
                    elif c[i-k][j+k][0]=="bki":
                        return True
                    elif c[i-k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="w":
                        break
                    elif c[i-k][j-k][0]=="bki":
                        return True
                    elif c[i-k][j-k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="w":
                        break
                    elif c[i+k][j+k][0]=="bki":
                        return True
                    elif c[i+k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="w":
                        break
                    elif c[i+k][j-k][0]=="bki":
                        return True
                    elif c[i+k][j-k][0][0]=="b":
                        break
    q="wb2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="w":
                        break
                    elif c[i-k][j+k][0]=="bki":
                        return True
                    elif c[i-k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="w":
                        break
                    elif c[i-k][j-k][0]=="bki":
                        return True
                    elif c[i-k][j-k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="w":
                        break
                    elif c[i+k][j+k][0]=="bki":
                        return True
                    elif c[i+k][j+k][0][0]=="b":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="w":
                        break
                    elif c[i+k][j-k][0]=="bki":
                        return True
                    elif c[i+k][j-k][0][0]=="b":
                        break
def white_check():
    q="bq"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="b":
                    break
                elif c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                elif c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                elif c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="b":
                    break
                elif c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="b":
                    break
                elif c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                elif c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break            
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                elif c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="b":
                    break
                elif c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="b":
                        break
                    elif c[i-k][j+k][0]=="wki":
                        return True
                    elif c[i-k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="b":
                        break
                    elif c[i-k][j-k][0]=="wki":
                        return True
                    elif c[i-k][j-k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="b":
                        break
                    elif c[i+k][j+k][0]=="wki":
                        return True
                    elif c[i+k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="b":
                        break
                    elif c[i+k][j-k][0]=="wki":
                        return True
                    elif c[i+k][j-k][0][0]=="w":
                        break
    q="br1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
                
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
    q="br2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)#The indices of the piece is obtained.
        if i==0:
            for k in range(1,8):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        elif i==7:
            for k in range(6,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
                
        else:
            for k in range(i-1,-1,-1):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
            for k in range(i+1,8):
                if c[k][j][0][0]=="b":
                    break
                if c[k][j][0]=="wki":
                    return True
                elif c[k][j][0][0]=="w":
                    break
        if j==0:
            for k in range(1,8):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
        elif j==7:
            for k in range(6,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
                
        else:
            for k in range(j-1,-1,-1):
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
            for k in range(j+1,8):
                print(k,3)
                if c[i][k][0][0]=="b":
                    break
                if c[i][k][0]=="wki":
                    return True
                elif c[i][k][0][0]=="w":
                    break
    q="bp1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp3"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp4"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp5"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp6"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp7"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True
    q="bp8"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if j==0:
            if c[i-1][j+1][0]=="wki":
                return True
        elif j==7:
            if c[i-1][j-1][0]=="wki":
                return True
        elif j!=0 and j!=7:
            if c[i-1][j-1][0]=="wki":
                return True
            elif c[i-1][j+1][0]=="wki":
                return True

    q="bk1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if i-2>=0:
            if j-1>=0:
                if c[i-2][j-1][0]=="wki":
                    return True
            if j+1<=7:
                if c[i-2][j+1][0]=="wki":
                    return True
        if i+2<=7:
            if j-1>=0:
                if c[i+2][j-1][0]=="wki":
                    return True
            if j+1<=7:
                if c[i+2][j+1][0]=="wki":
                    return True
        if i-1>=0:
            if j-2>=0:
                if c[i-1][j-2][0]=="wki":
                    return True
            if j+2<=7:
                if c[i-1][j+2][0]=="wki":
                    return True
        if i+1<=7:
            if j-2>=0:
                if c[i+1][j-2][0]=="wki":
                    return True
            if j+2<=7:
                if c[i+1][j+2][0]=="wki":
                    return True
    q="bk2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        if i-2>=0:
            if j-1>=0:
                if c[i-2][j-1][0]=="wki":
                    return True
            if j+1<=7:
                if c[i-2][j+1][0]=="wki":
                    return True
        if i+2<=7:
            if j-1>=0:
                if c[i+2][j-1][0]=="wki":
                    return True
            if j+1<=7:
                if c[i+2][j+1][0]=="wki":
                    return True
        if i-1>=0:
            if j-2>=0:
                if c[i-1][j-2][0]=="wki":
                    return True
            if j+2<=7:
                if c[i-1][j+2][0]=="wki":
                    return True
        if i+1<=7:
            if j-2>=0:
                if c[i+1][j-2][0]=="wki":
                    return True
            if j+2<=7:
                if c[i+1][j+2][0]=="wki":
                    return True
    
    q="bb1"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="b":
                        break
                    elif c[i-k][j+k][0]=="wki":
                        return True
                    elif c[i-k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="b":
                        break
                    elif c[i-k][j-k][0]=="wki":
                        return True
                    elif c[i-k][j-k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="b":
                        break
                    elif c[i+k][j+k][0]=="wki":
                        return True
                    elif c[i+k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="b":
                        break
                    elif c[i+k][j-k][0]=="wki":
                        return True
                    elif c[i+k][j-k][0][0]=="w":
                        break
    q="bb2"
    i=0
    j=0
    if find(q)!=None:
        (i,j)=find(q)
        for k in range(1,8):
            if i-k>=0:
                if j+k<=7:
                    if c[i-k][j+k][0][0]=="b":
                        break
                    elif c[i-k][j+k][0]=="wki":
                        return True
                    elif c[i-k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i-k>=0:
                if j-k>=0:
                    if c[i-k][j-k][0][0]=="b":
                        break
                    elif c[i-k][j-k][0]=="wki":
                        return True
                    elif c[i-k][j-k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j+k<=7:
                    if c[i+k][j+k][0][0]=="b":
                        break
                    elif c[i+k][j+k][0]=="wki":
                        return True
                    elif c[i+k][j+k][0][0]=="w":
                        break
        for k in range(1,8):
            if i+k<=7:
                if j-k>=0:
                    if c[i+k][j-k][0][0]=="b":
                        break
                    elif c[i+k][j-k][0]=="wki":
                        return True
                    elif c[i+k][j-k][0][0]=="w":
                        break
def white_check_mate():

        p="wr1"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="wr2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                 for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="wp1"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    elif c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="wp2"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="wp3"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="wp4"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="wp5"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="wp6"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False 
            break
        p="wp7"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="wp8"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    break
                if c[i-1][j][0][0]=="b":
                    break
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="wk1"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="b":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="w":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="w":
                        pass
                    elif c[i-2][j+1][0][0]=="b":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="b":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="w":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="w":
                        pass
                    elif c[i+2][j+1][0][0]=="b":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="b":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="w":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="w":
                        pass
                    elif c[i-1][j+2][0][0]=="b":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="b":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="w":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="w":
                        pass
                    elif c[i+1][j+2][0][0]=="b":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="wk2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="b":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="w":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="w":
                        pass
                    elif c[i-2][j+1][0][0]=="b":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="b":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="w":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="w":
                        pass
                    elif c[i+2][j+1][0][0]=="b":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="b":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="w":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="w":
                        pass
                    elif c[i-1][j+2][0][0]=="b":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="b":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="w":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="w":
                        pass
                    elif c[i+1][j+2][0][0]=="b":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="wb1"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="wb2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        
        p="wq"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)#The indices of the piece is obtained.
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                return True
            else:
                return False
def black_check_mate():
        p="bp1"
        i=0
        j=0
        m=[]
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m!=[]:
                return False
            break
        p="bp2"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="bp3"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="bp4"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="bp5"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="bp6"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="bp7"
        i=0
        j=0
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check_mate")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m!=[]:
                return False
            break
        p="bp8"
        i=0
        j=0
        print("Came to bp8")
        while find(p)!=None:
            (i,j)=find(p)
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    break
                if c[i+1][j][0][0]=="w":
                    break
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
            break
        p="br1"
        print("Came to br1")
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)#The indices of the piece is obtained.
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="br2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)#The indices of the piece is obtained.
            print(i)
            print(j)
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="bb1"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="bb2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check_mate")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="bk1"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="w":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="b":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="b":
                        pass
                    elif c[i-2][j+1][0][0]=="w":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="w":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="b":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="b":
                        pass
                    elif c[i+2][j+1][0][0]=="w":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="w":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="b":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="b":
                        pass
                    elif c[i-1][j+2][0][0]=="w":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="w":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="b":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="b":
                        pass
                    elif c[i+1][j+2][0][0]=="w":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="bk2"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="w":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="b":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="b":
                        pass
                    elif c[i-2][j+1][0][0]=="w":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="w":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="b":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="b":
                        pass
                    elif c[i+2][j+1][0][0]=="w":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="w":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="b":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="b":
                        pass
                    elif c[i-1][j+2][0][0]=="w":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="w":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="b":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="b":
                        pass
                    elif c[i+1][j+2][0][0]=="w":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            if m!=[]:
                return False
        p="bq"
        i=0
        j=0
        if find(p)!=None:
            (i,j)=find(p)#The indices of the piece is obtained.
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
        print("End",m)
        if m==[]:
            return True
        else:
            return False

            

            

    
    

def move(p):
    #The chosen piece's possible moves are found.
    if find(p)!=None:
        if p=="wr1":
            print("The possible moves are:")
            i=0
            j=0
            print("wr1:",find(p))
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        if p=="wr2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                 for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wp1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    elif c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("White king under check.\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                for i in range(len(c)):
                    print(c[i],"\n")
                if black_check()==True:
                    if black_check_mate()==True:
                        print("Black Checkmate\nWhite wins!")
                    else:
                        play()
                else:
                    play()
        elif p=="wp2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            n=input("Choose your move:")
            (s,t)=index(n)
            if s==0:
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                l=input("Enter promotion piece:wq2,wr3,wk3")
                c[s][t].append(l)
                for i in range(len(c)):
                    print(c[i],"\n")
                if black_check()==True:
                    if black_check_mate()==True:
                        print("Black Checkmate\nWhite wins!")
                    else:
                        play()
                else:
                    play()

            else:
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                for i in range(len(c)):
                    print(c[i],"\n")
                if black_check()==True:
                    if black_check_mate()==True:
                        print("Black Checkmate\nWhite wins!")
                    else:
                        play()    
                else:
                    play()
        elif p=="wp3":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wp4":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wp5":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)        
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wp6":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)  
            print(m)      
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wp7":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wp8":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==6:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                    if c[i-2][j][0][0]=="e":
                        m.append(label(i-2,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            elif i>=1 and i<=5:
                if c[i-1][j][0][0]=="e":
                    m.append(label(i-1,j))
                if j==0:
                    if c[i-1][j+1][0][0]=="b":
                        m.append(label(i-1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i-1][j-1][0][0]=="b":
                        m.append(label(i-1,j-1)+"(To be taken)")
                    if c[i-1][j+1][0][0]=="b":
                            m.append(label(i-1,j+1)+"(To be taken)")
                if c[i-1][j][0][0]=="w":
                    return
                if c[i-1][j][0][0]=="b":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)  
            print(m)      
            if m==[]:
                print("White king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:wq2,wr3,wk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if black_check()==True:
                        if black_check_mate()==True:
                            print("Black Checkmate\nWhite wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="wk1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="b":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="w":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="w":
                        pass
                    elif c[i-2][j+1][0][0]=="b":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="b":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="w":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="w":
                        pass
                    elif c[i+2][j+1][0][0]=="b":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="b":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="w":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="w":
                        pass
                    elif c[i-1][j+2][0][0]=="b":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="b":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="w":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="w":
                        pass
                    elif c[i+1][j+2][0][0]=="b":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wk2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="b":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="w":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="w":
                        pass
                    elif c[i-2][j+1][0][0]=="b":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="b":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="w":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="w":
                        pass
                    elif c[i+2][j+1][0][0]=="b":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="b":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="w":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="w":
                        pass
                    elif c[i-1][j+2][0][0]=="b":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="b":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="w":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="w":
                        pass
                    elif c[i+1][j+2][0][0]=="b":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wb1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wb2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wq":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="wki":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,2):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,5,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,i-2,-1):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,i+2):
                    if c[k][j][0][0]=="w":
                        break
                    elif c[k][j][0][0]=="b":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,2):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,5,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,j-2,-1):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,j+2):
                    if c[i][k][0][0]=="w":
                        break
                    elif c[i][k][0][0]=="b":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,2):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="w":
                            break
                        elif c[i-k][j+k][0][0]=="b":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,2):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="w":
                            break
                        elif c[i-k][j-k][0][0]=="b":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,2):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="w":
                            break
                        elif c[i+k][j+k][0][0]=="b":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,2):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="w":
                            break
                        elif c[i+k][j-k][0][0]=="b":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("white_check")
                a=white_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("White king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)#User defined function
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            
            for i in range(len(c)):
                print(c[i],"\n")
            if black_check()==True:
                if black_check_mate()==True:
                    print("Black Checkmate\nWhite wins!")
                else:
                    play()
            else:
                play()
        elif p=="bp1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp3":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp4":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp5":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp6":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp7":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            print(m)
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="bp8":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i==1:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                    if c[i+2][j][0][0]=="e":
                        m.append(label(i+2,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    elif c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            elif i>=2 and i<=6:
                if c[i+1][j][0][0]=="e":
                    m.append(label(i+1,j))
                if j==0:
                    if c[i+1][j+1][0][0]=="w":
                        m.append(label(i+1,j+1)+"(To be taken)")
                elif j==7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                elif j!=0 and j!=7:
                    if c[i+1][j-1][0][0]=="w":
                        m.append(label(i+1,j-1)+"(To be taken)")
                    if c[i+1][j+1][0][0]=="w":
                            m.append(label(i+1,j+1)+"(To be taken)")
                if c[i+1][j][0][0]=="b":
                    return
                if c[i+1][j][0][0]=="w":
                    return
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)        
            if m==[]:
                print("Black king under check\nChoose another piece.")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                if s==0:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    l=input("Enter promotion piece:bq2,br3,bk3")
                    c[s][t].append(l)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()

                else:
                    c[i][j].remove(p)
                    c[i][j].append("empty")
                    c[s][t].remove(c[s][t][0])
                    c[s][t].append(p)
                    for i in range(len(c)):
                        print(c[i],"\n")
                    if white_check()==True:
                        if white_check_mate()==True:
                            print("White Checkmate\nBlack wins!")
                        else:
                            play()
                    else:
                        play()
        elif p=="br1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="br2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            print(i)
            print(j)
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    print(k,3)
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bb1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bb2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bk1":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="w":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="b":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="b":
                        pass
                    elif c[i-2][j+1][0][0]=="w":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="w":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="b":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="b":
                        pass
                    elif c[i+2][j+1][0][0]=="w":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="w":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="b":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="b":
                        pass
                    elif c[i-1][j+2][0][0]=="w":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="w":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="b":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="b":
                        pass
                    elif c[i+1][j+2][0][0]=="w":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bk2":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)
            m=[]
            if i-2>=0:
                if j-1>=0:
                    if c[i-2][j-1][0][0]=="w":
                        m.append(label(i-2,j-1)+"(To be taken)")
                    elif c[i-2][j-1][0][0]=="b":
                        pass
                    elif c[i-2][j-1][0][0]=="e":
                        m.append(label(i-2,j-1))
                if j+1<=7:
                    if c[i-2][j+1][0][0]=="b":
                        pass
                    elif c[i-2][j+1][0][0]=="w":
                        m.append(label(i-2,j+1)+"(To be taken)")
                    elif c[i-2][j+1][0][0]=="e":
                        m.append(label(i-2,j+1))
            if i+2<=7:
                if j-1>=0:
                    if c[i+2][j-1][0][0]=="w":
                        m.append(label(i+2,j-1)+"(To be taken)")
                    elif c[i+2][j-1][0][0]=="b":
                        pass
                    elif c[i+2][j-1][0][0]=="e":
                        m.append(label(i+2,j-1))
                if j+1<=7:
                    if c[i+2][j+1][0][0]=="b":
                        pass
                    elif c[i+2][j+1][0][0]=="w":
                        m.append(label(i+2,j+1)+"(To be taken)")
                    elif c[i+2][j+1][0][0]=="e":
                        m.append(label(i+2,j+1))
            if i-1>=0:
                if j-2>=0:
                    if c[i-1][j-2][0][0]=="w":
                        m.append(label(i-1,j-2)+"(To be taken)")
                    elif c[i-1][j-2][0][0]=="b":
                        pass
                    elif c[i-1][j-2][0][0]=="e":
                        m.append(label(i-1,j-2))
                if j+2<=7:
                    if c[i-1][j+2][0][0]=="b":
                        pass
                    elif c[i-1][j+2][0][0]=="w":
                        m.append(label(i-1,j+2)+"(To be taken)")
                    elif c[i-1][j+2][0][0]=="e":
                        m.append(label(i-1,j+2))
            if i+1<=7:
                if j-2>=0:
                    if c[i+1][j-2][0][0]=="w":
                        m.append(label(i+1,j-2)+"(To be taken)")
                    elif c[i+1][j-2][0][0]=="b":
                        pass
                    elif c[i+1][j-2][0][0]=="e":
                        m.append(label(i+1,j-2))
                if j+2<=7:
                    if c[i+1][j+2][0][0]=="b":
                        pass
                    elif c[i+1][j+2][0][0]=="w":
                        m.append(label(i+1,j+2)+"(To be taken)")
                    elif c[i+1][j+2][0][0]=="e":
                        m.append(label(i+1,j+2))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bq":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,-1,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,8):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,-1,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,8):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,8):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,8):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,8):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,8):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)#User defined function
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()
        elif p=="bki":
            print("The possible moves are:")
            i=0
            j=0
            (i,j)=find(p)#The indices of the piece is obtained.
            m=[]
            if i==0:
                for k in range(1,2):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            elif i==7:
                for k in range(6,5,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To betaken)")
                        break
                    else:
                        m.append(label(k,j))
                    
            else:
                for k in range(i-1,i-2,-1):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
                for k in range(i+1,i+2):
                    if c[k][j][0][0]=="b":
                        break
                    elif c[k][j][0][0]=="w":
                        m.append(label(k,j)+"(To be taken)")
                        break
                    else:
                        m.append(label(k,j))
            if j==0:
                for k in range(1,2):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            elif j==7:
                for k in range(6,5,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                    
            else:
                for k in range(j-1,j-2,-1):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
                for k in range(j+1,j+2):
                    if c[i][k][0][0]=="b":
                        break
                    elif c[i][k][0][0]=="w":
                        m.append(label(i,k)+"(To be taken)")
                        break
                    else:
                        m.append(label(i,k))
            for k in range(1,2):
                if i-k>=0:
                    if j+k<=7:
                        if c[i-k][j+k][0][0]=="b":
                            break
                        elif c[i-k][j+k][0][0]=="w":
                            m.append(label(i-k,j+k)+"(To be taken)")
                            break
                        elif c[i-k][j+k][0][0]=="e":
                            m.append(label(i-k,j+k))
            for k in range(1,2):
                if i-k>=0:
                    if j-k>=0:
                        if c[i-k][j-k][0][0]=="b":
                            break
                        elif c[i-k][j-k][0][0]=="w":
                            m.append(label(i-k,j-k)+"(To be taken)")
                            break
                        elif c[i-k][j-k][0][0]=="e":
                            m.append(label(i-k,j-k))
            for k in range(1,2):
                if i+k<=7:
                    if j+k<=7:
                        if c[i+k][j+k][0][0]=="b":
                            break
                        elif c[i+k][j+k][0][0]=="w":
                            m.append(label(i+k,j+k)+"(To be taken)")
                            break
                        elif c[i+k][j+k][0][0]=="e":
                            m.append(label(i+k,j+k))
            for k in range(1,2):
                if i+k<=7:
                    if j-k>=0:
                        if c[i+k][j-k][0][0]=="b":
                            break
                        elif c[i+k][j-k][0][0]=="w":
                            m.append(label(i+k,j-k)+"(To be taken)")
                            break
                        elif c[i+k][j-k][0][0]=="e":
                            m.append(label(i+k,j-k))
            print("Checking for check")
            print("unfiltered m=",m)
            remove_list=[]
            for y in m:
                print("y=",y)
                a=0
                (s,t)=index(y[0:2])#To exclude brackets
                temp_piece=c[s][t][0]
                c[i][j].remove(p)#hello
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
                print(y,a)
                print("black_check")
                a=black_check()
                print(y,a)
                if a==True:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
                    print(y,"removing")
                    remove_list.append(y)
                else:
                    c[s][t].remove(p)
                    c[s][t].append(temp_piece)
                    c[i][j].remove("empty")
                    c[i][j].append(p)
            for y in remove_list:
                m.remove(y)
            print(m)
            if m==[]:
                print("Black king is under check\nChoose another piece")
                play()
            else:
                n=input("Choose your move:")
                (s,t)=index(n)#User defined function
                c[i][j].remove(p)
                c[i][j].append("empty")
                c[s][t].remove(c[s][t][0])
                c[s][t].append(p)
            
            for i in range(len(c)):
                print(c[i],"\n")
            if white_check()==True:
                if white_check_mate()==True:
                    print("White Checkmate\nBlack wins!")
                else:
                    play()
            else:
                play()

    else:
        print("The piece is not found")
        play()

    
        
        
                    
                
                    
            
    
    
            
                
            
                
        
c=[[["br1"],["bk1"],["bb1"],["bq"],["bki"],["bb2"],["bk2"],["br2"]],[["bp1"],["bp2"],["bp3"],["bp4"],["bp5"],["bp6"],["bp7"],["bp8"]],[["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"]],[["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"]],[["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"]],[["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"],["empty"]],[["wp1"],["wp2"],["wp3"],["wp4"],["wp5"],["wp6"],["wp7"],["wp8"]],[["wr1"],["wk1"],["wb1"],["wq"],["wki"],["wb2"],["wk2"],["wr2"]]]
print(len(c))
for i in range(len(c)):
	print(c[i],"\n")
p=input("Do you want to play a game of chess?:\ny/n")

if p=="y":
    play()
else:
    print("Okay,run the program once again if you want to play some other time")
